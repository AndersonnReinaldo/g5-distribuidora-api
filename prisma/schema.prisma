generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model estoque {
  id_estoque            Int                     @id @default(autoincrement())
  id_produto            Int
  quantidade            Int
  status                Int                     @default(1)
  produtos              produtos                @relation(fields: [id_produto], references: [id_produto], onUpdate: Restrict, map: "estoque_ibfk_1")
  estoque_movimentacoes estoque_movimentacoes[]
  itens_transacao       itens_transacao[]

  @@index([id_produto], map: "id_produto")
}

model produtos {
  id_produto                 Int                       @id @default(autoincrement())
  id_categoria               Int
  id_marca                   Int
  id_unidade_medida_multiplo Int                       @default(1)
  multiplo_vendas            Int                       @default(1)
  valor_unitario             Float                     @db.Float
  nome                       String                    @db.VarChar(255)
  image                      String?                   @db.Text
  status                     Int                       @default(1)
  cestas_basicas_produtos    cestas_basicas_produtos[]
  estoque                    estoque[]
  itens_transacao            itens_transacao[]
  categorias                 categorias                @relation(fields: [id_categoria], references: [id_categoria], onUpdate: Restrict, map: "produtos_ibfk_2")
  marca                      marca                     @relation(fields: [id_marca], references: [id_marca], onUpdate: Restrict, map: "produtos_ibfk_3")
  unidades_medida            unidades_medida           @relation(fields: [id_unidade_medida_multiplo], references: [id_unidade_medida], onUpdate: Restrict, map: "produtos_ibfk_4")

  @@index([id_categoria], map: "produtos_ibfk_2")
  @@index([id_marca], map: "id_marca")
  @@index([id_unidade_medida_multiplo], map: "id_unidade_medida_multiplo")
}

model unidades_medida {
  id_unidade_medida Int        @id @default(autoincrement())
  descricao         String     @db.VarChar(50)
  status            Int?       @default(1)
  produtos          produtos[]
}

model usuarios {
  id_usuario            Int                     @id @default(autoincrement())
  nome                  String                  @db.VarChar(255)
  email                 String                  @unique(map: "email") @db.VarChar(255)
  usuario               String                  @unique(map: "usuario") @db.VarChar(255)
  senha                 String                  @db.VarChar(255)
  admin                 Int                     @default(0)
  status                Int                     @default(1)
  caixas_dia            caixas_dia[]
  cestas_basicas        cestas_basicas[]
  estoque_movimentacoes estoque_movimentacoes[]
  transacoes            transacoes[]
}

model categorias {
  id_categoria Int        @id @default(autoincrement())
  descricao    String     @db.VarChar(255)
  status       Int        @default(1)
  produtos     produtos[]
}

model marca {
  id_marca  Int        @id @default(autoincrement())
  descricao String     @db.VarChar(255)
  status    Int        @default(1)
  produtos  produtos[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model estoque_movimentacoes {
  id_estoque_movimentacao Int               @id @default(autoincrement())
  id_estoque              Int
  id_usuario              Int
  tipo_movimento          Int
  id_metodo_pagamento     Int
  quantidade              Int
  valor_unitario          Float             @db.Float
  valor_total             Float             @db.Float
  datahora                DateTime          @default(now()) @db.Timestamp(0)
  status                  Int               @default(1)
  estoque                 estoque           @relation(fields: [id_estoque], references: [id_estoque], onUpdate: Restrict, map: "estoque_movimentacoes_ibfk_1")
  usuarios                usuarios          @relation(fields: [id_usuario], references: [id_usuario], onUpdate: Restrict, map: "estoque_movimentacoes_ibfk_2")
  metodos_pagamento       metodos_pagamento @relation(fields: [id_metodo_pagamento], references: [id_metodo_pagamento], onUpdate: Restrict, map: "estoque_movimentacoes_ibfk_3")

  @@index([id_estoque], map: "id_estoque")
  @@index([id_usuario], map: "id_usuario")
  @@index([id_metodo_pagamento], map: "id_metodo_pagamento")
}

model metodos_pagamento {
  id_metodo_pagamento   Int                     @id @default(autoincrement())
  descricao             String                  @db.VarChar(255)
  status                Int                     @default(1)
  estoque_movimentacoes estoque_movimentacoes[]
  transacoes            transacoes[]
}

model cestas_basicas {
  id_cesta_basica         Int                       @id @default(autoincrement())
  id_usuario              Int
  descricao               String                    @db.VarChar(255)
  status                  Int                       @default(1)
  usuarios                usuarios                  @relation(fields: [id_usuario], references: [id_usuario], onUpdate: Restrict, map: "cestas_basicas_ibfk_1")
  cestas_basicas_produtos cestas_basicas_produtos[]

  @@index([id_usuario], map: "id_usuario")
}

model cestas_basicas_produtos {
  id_cesta_basica_produto Int            @id @default(autoincrement())
  id_cesta_basica         Int
  id_produto              Int
  quantidade              Int
  valor_unitario          Float          @db.Float
  status                  Int            @default(1)
  cestas_basicas          cestas_basicas @relation(fields: [id_cesta_basica], references: [id_cesta_basica], onUpdate: Restrict, map: "cestas_basicas_produtos_ibfk_1")
  produtos                produtos       @relation(fields: [id_produto], references: [id_produto], onUpdate: Restrict, map: "cestas_basicas_produtos_ibfk_2")

  @@index([id_cesta_basica], map: "id_cesta_basica")
  @@index([id_produto], map: "id_produto")
}

model caixas_dia {
  id_caixa_dia         Int          @id @default(autoincrement())
  id_usuario           Int
  valor_total          Float        @default(0) @db.Float
  valor_sangria        Float?       @db.Float
  data_hora_abertura   DateTime     @default(now()) @db.Timestamp(0)
  data_hora_fechamento DateTime?    @db.Timestamp(0)
  status               Int          @default(1)
  usuarios             usuarios     @relation(fields: [id_usuario], references: [id_usuario], onUpdate: Restrict, map: "caixas_dia_ibfk_1")
  transacoes           transacoes[]

  @@index([id_usuario], map: "id_usuario")
}

model itens_transacao {
  id_item_transacao Int        @id @default(autoincrement())
  id_transacao      Int
  id_produto        Int
  id_estoque        Int
  quantidade        Int
  valor_unitario    Float      @db.Float
  desconto          Float      @default(0) @db.Float
  status            Int        @default(1)
  estoque           estoque    @relation(fields: [id_estoque], references: [id_estoque], onUpdate: Restrict, map: "itens_transacao_ibfk_1")
  produtos          produtos   @relation(fields: [id_produto], references: [id_produto], onUpdate: Restrict, map: "itens_transacao_ibfk_2")
  transacoes        transacoes @relation(fields: [id_transacao], references: [id_transacao], onUpdate: Restrict, map: "itens_transacao_ibfk_3")

  @@index([id_estoque], map: "id_estoque")
  @@index([id_produto], map: "id_produto")
  @@index([id_transacao], map: "id_transacao")
}

model transacoes {
  id_transacao        Int               @id @default(autoincrement())
  id_cliente          Int?
  id_caixa_dia        Int
  id_usuario          Int
  id_metodo_pagamento Int
  data_transacao      DateTime          @default(now()) @db.Timestamp(0)
  valor_total         Float             @db.Float
  status              Int?              @default(1)
  itens_transacao     itens_transacao[]
  usuarios            usuarios          @relation(fields: [id_usuario], references: [id_usuario], onUpdate: Restrict, map: "transacoes_ibfk_1")
  caixas_dia          caixas_dia        @relation(fields: [id_caixa_dia], references: [id_caixa_dia], onUpdate: Restrict, map: "transacoes_ibfk_2")
  metodos_pagamento   metodos_pagamento @relation(fields: [id_metodo_pagamento], references: [id_metodo_pagamento], onUpdate: Restrict, map: "transacoes_ibfk_3")

  @@index([id_caixa_dia], map: "id_caixa_dia")
  @@index([id_metodo_pagamento], map: "id_metodo_pagamento")
  @@index([id_usuario], map: "id_usuario")
}
